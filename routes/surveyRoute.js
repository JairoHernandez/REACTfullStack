// Do this vs. using 'require' out of models/Survey.js because it will be 
// less of a headache if you decide to use a testing framework in the future.
const monggoose = require('mongoose');
const Survey = mongoose.model('surveys'); // Use 'surveys' model created in models/Survey.js

const requireLogin = require('../middlewares/requireLogin');
const requireCredits = require('../middlewares/requireCredits');


module.exports = app => {
    // Create a new survey and save to DB.
    // Are you logged in and do you have at least one credit to send out a survey.
    // REMEMBER THIS IS STILL BACKEND SERVER.
    app.post('/api/surveys', requireLogin, requireCredits, (req, res) => {
        // First test that you can pull out tiltle, subject, body, recipient form req.body.
        const { title, subject, body, recipients } = req.body;

        const survey = new Survey({
            title,
            subject,
            body,
            //recipients: recipients.split(',').map(email => { return { email: email } })
            // REFACTOR: You need wrap curly braces with () to tell JS the curly {} is NOT 
            // definining a function to run but rather an object. Final result is array of ojbects.
            recipients: recipients.split(',').map(email => ({ email.trim() })), // trim() removes extra whitespace so that only commas are the focus.

            // id property is auto-generated by mongoDB so we dont have to define it in any 
            // Schema! It's just a property available in any mongoose model.
            _user: req.user.id ,
            dateSent: Date.now()
        });

    });
};